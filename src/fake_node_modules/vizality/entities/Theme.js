const { resolveCompiler } = require('vizality/compilers');
const { createElement } = require('vizality/util');

const Updatable = require('./Updatable');

class Theme extends Updatable {
  constructor (themeID, manifest) {
    const styleManager = typeof vizality !== 'undefined' ? vizality.styleManager : global.sm;
    super(styleManager.themesDir, themeID);
    this.compiler = resolveCompiler(manifest.effectiveTheme);
    this.manifest = manifest;
    this.applied = false;

    this.baseBadgeStyle =
      `color: #fff;
      border-radius: 3px;
      text-align: center;
      display: inline-block;
      font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
      text-transform: uppercase;
      font-size: 10px;
      font-weight: 700;
      line-height: 14px;
      margin-right: 3px;
      padding: 1px 4px;
      `;

    this.mainBadgeStyle =
      `background-repeat: no-repeat;
      background-position: center;
      background-size: contain;
      padding: 2px 16px 5px 0;
      border-radius: 5px;
      text-align: center;
      margin: 0 2px 1px 0;
      display: inline-block;
      `;

    this.descriptorBadgeStyle =
      `background: #128c43;
      ${this.baseBadgeStyle}
      `;

    this.moduleBadgeStyle = this.baseBadgeStyle;

    this.warnBadgeStyle =
      `color: #000;
       background: #fffc00;
       ${this.baseBadgeStyle}
      `;

    this.errorBadgeStyle =
      `background: #ff0000;
       ${this.baseBadgeStyle}
      `;
  }

  apply () {
    if (!this.applied) {
      this.applied = true;
      const style = createElement('style', {
        id: `theme-${this.entityID}`,
        'vz-style': true,
        'vz-theme': true
      });
      document.head.appendChild(style);
      this._doCompile = async () => {
        style.innerHTML = await this.compiler.compile();
      };

      this.compiler.enableWatcher();
      this.compiler.on('src-update', this._doCompile);
      return this._doCompile();
    }
  }

  remove () {
    if (this.applied) {
      this.applied = false;
      this.compiler.off('src-update', this._doCompile);
      document.getElementById(`theme-${this.entityID}`).remove();
      this.compiler.disableWatcher();
    }
  }

  log (...data) {
    this.mainBadgeStyle +=
    `background-image: ${this.isInternal
      ? 'url(https://i.imgur.com/EeCmmdP.png)'
      : this.manifest.icon
        ? `url(${this.manifest.icon})`
        : 'url(https://i.imgur.com/IXpuyrT.png)'};
    `;

    this.moduleBadgeStyle +=
      `background: ${this.manifest.color
        ? this.manifest.color
        : '#3c7e99'};
      `;

    console.log(
      `%c %cTheme%c${this.manifest.name}%c`,
      this.mainBadgeStyle,
      this.descriptorBadgeStyle,
      this.moduleBadgeStyle,
      '', // clear the styles of the `data`
      ...data
    );
  }

  warn (...data) {
    this.mainBadgeStyle +=
    `background-image: ${this.isInternal
      ? 'url(https://i.imgur.com/EeCmmdP.png)'
      : this.manifest.icon
        ? `url(${this.manifest.icon})`
        : 'url(https://i.imgur.com/IXpuyrT.png)'};
    `;

    this.moduleBadgeStyle +=
      `background: ${this.manifest.color
        ? this.manifest.color
        : '#3c7e99'};
      `;

    console.warn(
      `%cWarning %c %cTheme%c${this.manifest.name}%c`,
      this.warnBadgeStyle,
      this.mainBadgeStyle,
      this.descriptorBadgeStyle,
      this.moduleBadgeStyle,
      '', // clear the styles of the `data`
      ...data
    );
  }

  error (...data) {
    this.mainBadgeStyle +=
    `background-image: ${this.isInternal
      ? 'url(https://i.imgur.com/EeCmmdP.png)'
      : this.manifest.icon
        ? `url(${this.manifest.icon})`
        : 'url(https://i.imgur.com/IXpuyrT.png)'};
    `;

    this.moduleBadgeStyle +=
      `background: ${this.manifest.color
        ? this.manifest.color
        : '#3c7e99'};
      `;

    console.error(
      `%cError %c %cTheme%c${this.manifest.name}%c`,
      this.errorBadgeStyle,
      this.mainBadgeStyle,
      this.descriptorBadgeStyle,
      this.moduleBadgeStyle,
      '', // clear the styles of the `data`
      ...data
    );
  }
}

module.exports = Theme;
