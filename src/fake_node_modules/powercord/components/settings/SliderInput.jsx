const { getModule, getModuleByDisplayName, React } = require('powercord/webpack');
const AsyncComponent = require('../AsyncComponent');
const FormItem = require('./FormItem.jsx');

const Slider = AsyncComponent.from(getModuleByDisplayName('Slider'));

let margin = '';
module.exports = class SliderInput extends React.Component {
  constructor () {
    super();
    this.state = { margin };
  }

  async componentDidMount () {
    if (margin !== '') {
      return;
    }

    margin = (await getModule([ 'marginTop20' ])).marginTop20;
    this.setState({ margin });
  }

  render () {
    const { children: title, note, required } = this.props;
    delete this.props.children;

    return (
      <FormItem title={title} note={note} required={required}>
        <Slider {...{
          ...this.props,
          className: `${this.props.className || ''} ${margin}`.trim()
        }}/>
      </FormItem>
    );
  }
};

/**
 * AVAILABLE PROPS
 *
 * defaultValue={ 16 }
 * disabled={ false }
 * fillStyles={ '' }
 * handleSize={ 10 }
 * initialValue={ 16 }
 * markers={[
 *   12, 14, 15, 16, 18, 20, 24
 * ]}
 * maxValue={ 100 }
 * minValue={ 0 }
 * onMarkerRender={ '' }
 * onValueChange={ '' }
 * onValueRender={ '' }
 * stickToMarkers={ true }
 */
