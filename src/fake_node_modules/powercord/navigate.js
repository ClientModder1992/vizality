const { get } = require('powercord/webpack');
const currentWebContents = require('electron').remote.getCurrentWebContents();
const EventEmitter = require('events');

class Nav extends EventEmitter {
  constructor () {
    super();

    this.routes = {
      discover: '/guild-discovery',
      // channel: '//channels/[0-9]+/.*/',
      dm: '/channels/@me/',
      friends: '/channels/@me',
      guild: '/channels/',
      library: '/library'
    };

    currentWebContents.on('did-navigate-in-page', () => {
      this.emit(this.currentRoute);
      document.documentElement.dataset.currentRoute = this.currentRoute === 'channel' ? 'guild' : this.currentRoute;
    });
  }

  // Go to different routes in Discord
  discover () {
    return get('transitionTo')(get('Routes').GUILD_DISCOVERY);
  }

  dm () {
    // eslint-disable-next-line new-cap
    return get('transitionTo')(get('Routes').CHANNEL('@me', get('getPrivateChannelIds')()[0]));
  }

  friends () {
    return get('transitionTo')(get('Routes').FRIENDS);
  }

  library () {
    return get('transitionTo')(get('Routes').APPLICATION_LIBRARY);
  }

  get currentRoute () {
    const { routes } = this;
    const historyRoute = currentWebContents.history[currentWebContents.history.length - 2];
    for (let location in routes) {
      if (window.location.href.includes(routes[location])) {
        let locationStr = window.location.href.split('/');
        locationStr = `/${locationStr[3]}/${locationStr[4]}/`;

        if (location === 'guild' && historyRoute.includes(locationStr)) {
          location = 'channel';
        }
        return location;
      }
    }
    return 'unknown';
  }
}

module.exports = new Nav();
